{"ast":null,"code":"var _jsxFileName = \"/Users/suvashneupane/frontendd/my-react-app/src/display/Registerdisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Loader from '../component/Loader';\nimport Error from '../component/Error';\nimport Success from '../component/Success';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Registerdisplay() {\n  _s();\n  const [name, setname] = useState('');\n  const [email, setemail] = useState('');\n  const [password, setpassword] = useState('');\n  const [cpassword, setcpassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  async function register() {\n    if (password === cpassword) {\n      const user = {\n        name,\n        email,\n        password,\n        cpassword\n      };\n      try {\n        setLoading(true);\n        const result = await axios.post('api/users/register', user).data;\n        setLoading(false);\n        setSuccess(true);\n        setname('');\n        setemail('');\n        setpassword('');\n        setcpassword('');\n      } catch (error) {\n        setLoading(false);\n        setError(true);\n      }\n    } else {\n      alert('Passwords do not match');\n    }\n  }\n\n  // Function to reset success state after a certain duration\n  const resetSuccess = () => {\n    setSuccess(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-5 mt-5 \",\n        children: [success && /*#__PURE__*/_jsxDEV(Success, {\n          message: \"Successfully registered let's Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bs\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Register \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"name\",\n            value: name,\n            onChange: e => setname(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            placeholder: \"email\",\n            value: email,\n            onChange: e => setemail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            placeholder: \"password\",\n            value: password,\n            onChange: e => setpassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            placeholder: \"confirm password\",\n            value: cpassword,\n            onChange: e => setcpassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: register,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Registerdisplay, \"ehoALRmDluSnI3A/E2F4kxsHNx8=\");\n_c = Registerdisplay;\nexport default Registerdisplay;\nvar _c;\n$RefreshReg$(_c, \"Registerdisplay\");","map":{"version":3,"names":["React","useState","axios","Loader","Error","Success","jsxDEV","_jsxDEV","Registerdisplay","_s","name","setname","email","setemail","password","setpassword","cpassword","setcpassword","loading","setLoading","error","setError","success","setSuccess","errorMessage","setErrorMessage","register","user","result","post","data","alert","resetSuccess","children","fileName","_jsxFileName","lineNumber","columnNumber","className","message","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/suvashneupane/frontendd/my-react-app/src/display/Registerdisplay.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Loader from '../component/Loader';\nimport Error from '../component/Error';\nimport Success from '../component/Success';\n\nfunction Registerdisplay() {\n  const [name, setname] = useState('');\n  const [email, setemail] = useState('');\n  const [password, setpassword] = useState('');\n  const [cpassword, setcpassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  async function register() {\n    if (password === cpassword) {\n      const user = { name, email, password, cpassword };\n      try {\n        setLoading(true);\n        const result = await axios.post('api/users/register', user).data;\n        setLoading(false);\n        setSuccess(true);\n       \n        setname('')\n        setemail('')\n        setpassword('')\n        setcpassword('')\n      } catch (error) {\n        setLoading(false);\n        setError(true);\n\n      }\n    } else {\n      alert('Passwords do not match');\n    }\n  }\n\n  // Function to reset success state after a certain duration\n  const resetSuccess = () => {\n    setSuccess(false);\n  };\n\n  return (\n    <div>\n      {loading && (<Loader />)}\n{error&&(<Error/>)}\n\n\n      <div className=\"row justify-content-center mt-5\">\n        <div className=\"col-md-5 mt-5 \">\n                  {success && (<Success message=\"Successfully registered let's Login\" />)}\n          <div className=\"bs\">\n            <h2> Register </h2>\n            <input type=\"text\" className=\"form-control\" placeholder=\"name\" value={name} onChange={(e) => setname(e.target.value)} />\n            <input type=\"email\" className=\"form-control\" placeholder=\"email\" value={email} onChange={(e) => setemail(e.target.value)} />\n            <input type=\"password\" className=\"form-control\" placeholder=\"password\" value={password} onChange={(e) => setpassword(e.target.value)} />\n            <input type=\"password\" className=\"form-control\" placeholder=\"confirm password\" value={cpassword} onChange={(e) => setcpassword(e.target.value)} />\n            <button className=\"btn btn-primary\" onClick={register}>\n              Register\n            </button>\n          </div>\n        </div>\n      </div>\n      {/* Reset success state after a certain duration or user action */}\n{/* Reset success state after 5 seconds */}\n    </div>\n  );\n}\n\nexport default Registerdisplay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}